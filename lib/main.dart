// lib/main.dart

// FIX: Corrected all import paths to be absolute and consistent.
import 'package:accountbook/screens/add_bank_account_screen.dart';
import 'package:accountbook/screens/create_debit_note_screen.dart';
import 'package:accountbook/screens/create_payment_made_screen.dart';
import 'package:accountbook/screens/create_payment_receipt_screen.dart';
import 'package:accountbook/screens/debit_note_list_screen.dart';
import 'package:accountbook/screens/e_way_bill_login_screen.dart';
import 'package:accountbook/screens/payment_receipt_list_screen.dart';
import 'package:accountbook/screens/payments_made_list_screen.dart';
import 'package:flutter/material.dart';
// Import Firebase
// import 'package:firebase_core/firebase_core.dart';
// import 'firebase_options.dart'; // This file will be generated by the FlutterFire CLI

// Import all your screens
import 'package:accountbook/screens/main_screen.dart';
import 'package:accountbook/screens/add_sale_screen.dart';
import 'package:accountbook/screens/add_item_screen.dart';
import 'package:accountbook/screens/item_settings_screen.dart';
import 'package:accountbook/screens/add_purchase_screen.dart';
import 'package:accountbook/screens/sale_report_screen.dart';
import 'package:accountbook/screens/purchase_report_screen.dart';
import 'package:accountbook/screens/day_book_screen.dart';
import 'package:accountbook/screens/all_transactions_screen.dart';
import 'package:accountbook/screens/bill_wise_profit_screen.dart';
import 'package:accountbook/screens/profit_loss_screen.dart';
import 'package:accountbook/screens/cashflow_screen.dart';
import 'package:accountbook/screens/balance_sheet_screen.dart';
import 'package:accountbook/screens/trial_balance_screen.dart';
import 'package:accountbook/screens/party_reports_screen.dart';
import 'package:accountbook/screens/gst_reports_screen.dart';
import 'package:accountbook/screens/stock_reports_screen.dart';
import 'package:accountbook/screens/transaction_settings_screen.dart';
import 'package:accountbook/screens/payment_in_screen.dart';
import 'package:accountbook/screens/sale_return_screen.dart';
import 'package:accountbook/screens/delivery_challan_screen.dart';
import 'package:accountbook/screens/estimate_quote_screen.dart';
import 'package:accountbook/screens/sale_order_screen.dart';
import 'package:accountbook/screens/sale_invoice_screen.dart';
import 'package:accountbook/screens/payment_out_screen.dart';
import 'package:accountbook/screens/purchase_return_screen.dart';
import 'package:accountbook/screens/purchase_order_screen.dart';
import 'package:accountbook/screens/expense_screen.dart';
import 'package:accountbook/screens/other_income_screen.dart';
import 'package:accountbook/screens/settings_screen.dart';
import 'package:accountbook/screens/stock_dashboard_screen.dart';
import 'package:accountbook/screens/stock_summary_screen.dart';
import 'package:accountbook/screens/e_invoice_login_screen.dart';
import 'package:accountbook/screens/quotation_list_screen.dart';
import 'package:accountbook/screens/quotation_filters_screen.dart';
import 'package:accountbook/screens/p2p_transfer_screen.dart';
import 'package:accountbook/screens/create_invoice_screen.dart';
import 'package:accountbook/screens/create_purchase_screen.dart';
import 'package:accountbook/screens/upload_bill_screen.dart';

// Import new screens for database interaction
import 'package:accountbook/screens/party_list_screen.dart';
import 'package:accountbook/screens/add_party_screen.dart';
import 'package:accountbook/screens/product_list_screen.dart';
import 'package:accountbook/screens/transport_details_screen.dart';
import 'package:accountbook/screens/other_details_screen.dart';
import 'package:accountbook/screens/bank_details_screen.dart';


void main() async {
  // Ensure Flutter is initialized
  WidgetsFlutterBinding.ensureInitialized();
  // Initialize Firebase
  // await Firebase.initializeApp(
  //   options: DefaultFirebaseOptions.currentPlatform,
  // );
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'AccountBook',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        fontFamily: 'Poppins',
        primaryColor: const Color(0xFF0052D4),
        scaffoldBackgroundColor: const Color(0xFFF8F9FA),
        colorScheme: ColorScheme.fromSeed(
          seedColor: const Color(0xFF0052D4),
          primary: const Color(0xFF0052D4), // Professional Blue
          secondary: const Color(0xFF00BFA5), // Vibrant Teal for accents/FAB
          background: const Color(0xFFF8F9FA),
          onBackground: const Color(0xFF212529),
          surface: Colors.white,
          onSurface: const Color(0xFF212529),
        ),
        useMaterial3: true,
        appBarTheme: const AppBarTheme(
          backgroundColor: Color(0xFFF8F9FA),
          foregroundColor: Color(0xFF212529),
          elevation: 0,
          titleTextStyle: TextStyle(
            fontFamily: 'Poppins',
            fontSize: 20,
            fontWeight: FontWeight.w600,
            color: Color(0xFF212529),
          ),
        ),
        // FIX: Changed CardTheme to CardThemeData
        cardTheme: CardTheme(
          elevation: 0,
          color: Colors.white,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16.0),
            side: BorderSide(color: Colors.grey.shade200, width: 1),
          ),
        ),
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            backgroundColor: const Color(0xFF0052D4),
            foregroundColor: Colors.white,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(12.0),
            ),
            padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 16),
            textStyle: const TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.w600,
              fontFamily: 'Poppins',
            ),
          ),
        ),
        textTheme: const TextTheme(
          displayLarge: TextStyle(fontSize: 57, fontWeight: FontWeight.w800),
          displayMedium: TextStyle(fontSize: 45, fontWeight: FontWeight.w700),
          displaySmall: TextStyle(fontSize: 36, fontWeight: FontWeight.w600),
          headlineLarge: TextStyle(fontSize: 32, fontWeight: FontWeight.w600),
          headlineMedium: TextStyle(fontSize: 28, fontWeight: FontWeight.w600),
          headlineSmall: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
          titleLarge: TextStyle(fontSize: 22, fontWeight: FontWeight.w500),
          titleMedium: TextStyle(fontSize: 16, fontWeight: FontWeight.w500, letterSpacing: 0.15),
          titleSmall: TextStyle(fontSize: 14, fontWeight: FontWeight.w500, letterSpacing: 0.1),
          bodyLarge: TextStyle(fontSize: 16, fontWeight: FontWeight.w400, height: 1.5),
          bodyMedium: TextStyle(fontSize: 14, fontWeight: FontWeight.w400, height: 1.4),
          bodySmall: TextStyle(fontSize: 12, fontWeight: FontWeight.w400, height: 1.3),
          labelLarge: TextStyle(fontSize: 14, fontWeight: FontWeight.w600, letterSpacing: 0.5),
        ),
      ),
      initialRoute: '/',
      // FIX: Removed 'const' from all screen constructors that are not constant.
      routes: {
        // Add new routes
        '/partyList': (context) => PartyListScreen(),
        '/addParty': (context) => AddPartyScreen(),
        '/productList': (context) => ProductListScreen(),
        '/transportDetails': (context) => TransportDetailsScreen(),
        '/otherDetails': (context) => OtherDetailsScreen(),
        '/bankDetails': (context) => BankDetailsScreen(),
        '/addBankAccount': (context) => AddBankAccountScreen(),
        '/eWayBillLogin': (context) => EWayBillLoginScreen(),
        '/paymentReceiptList': (context) => PaymentReceiptListScreen(),
        '/createPaymentReceipt': (context) => CreatePaymentReceiptScreen(),
        '/paymentsMadeList': (context) => PaymentsMadeListScreen(),
        '/createPaymentMade': (context) => CreatePaymentMadeScreen(),
        '/debitNoteList': (context) => DebitNoteListScreen(),
        '/createDebitNote': (context) => CreateDebitNoteScreen(),


        // Existing routes
        '/': (context) => MainScreen(),
        '/createInvoice': (context) => CreateInvoiceScreen(),
        '/createPurchase': (context) => CreatePurchaseScreen(),
        '/uploadBill': (context) => UploadBillScreen(),
        '/quotationList': (context) => QuotationListScreen(),
        '/quotationFilters': (context) => QuotationFiltersScreen(),
        '/addSale': (context) => AddSaleScreen(),
        '/addPurchase': (context) => AddPurchaseScreen(),
        '/addItem': (context) => AddItemScreen(),
        '/itemSettings': (context) => ItemSettingsScreen(),
        '/saleReport': (context) => SaleReportScreen(),
        '/purchaseReport': (context) => PurchaseReportScreen(),
        '/dayBook': (context) => DayBookScreen(),
        '/allTransactions': (context) => AllTransactionsScreen(),
        '/billWiseProfit': (context) => BillWiseProfitScreen(),
        '/profitLoss': (context) => ProfitLossScreen(),
        '/cashflow': (context) => CashflowScreen(),
        '/balanceSheet': (context) => BalanceSheetScreen(),
        '/trialBalance': (context) => TrialBalanceScreen(),
        '/partyReports': (context) => PartyReportsScreen(),
        '/gstReports': (context) => GstReportsScreen(),
        '/stockReports': (context) => StockReportsScreen(),
        '/settings': (context) => SettingsScreen(),
        '/stockDashboard': (context) => StockDashboardScreen(),
        '/stockSummary': (context) => StockSummaryScreen(),
        '/txnSettings': (context) => TransactionSettingsScreen(),
        '/paymentIn': (context) => PaymentInScreen(),
        '/saleReturn': (context) => SaleReturnScreen(),
        '/deliveryChallan': (context) => DeliveryChallanScreen(),
        '/estimateQuote': (context) => EstimateQuoteScreen(),
        '/saleOrder': (context) => SaleOrderScreen(),
        '/saleInvoice': (context) => SaleInvoiceScreen(),
        '/paymentOut': (context) => PaymentOutScreen(),
        '/purchaseReturn': (context) => PurchaseReturnScreen(),
        '/purchaseOrder': (context) => PurchaseOrderScreen(),
        '/expense': (context) => ExpenseScreen(),
        '/otherIncome': (context) => OtherIncomeScreen(),
        '/eInvoiceLogin': (context) => EInvoiceLoginScreen(),
        '/p2pTransfer': (context) => P2PTransferScreen(),
      },
    );
  }
}